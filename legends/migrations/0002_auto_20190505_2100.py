# Generated by Django 2.2 on 2019-05-05 21:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tagging.fields
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        ('portugal', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('motif', '0003_auto_20190415_2311'),
        ('biblio', '0002_auto_20190503_2343'),
        ('legends', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='Last Name')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='name_creator', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='name_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Name',
            },
        ),
        migrations.CreateModel(
            name='Narrative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public?')),
                ('version_number', models.IntegerField(blank=True, help_text='Deprecated', null=True, verbose_name='Version Number')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('other_title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Support Title')),
                ('excerpt', models.CharField(blank=True, help_text='Part, chaper, passage, page, etc..', max_length=255, verbose_name='Excerpt')),
                ('collection_year', models.IntegerField(blank=True, null=True, verbose_name='Year')),
                ('transcription', models.TextField(blank=True, verbose_name='Transcription')),
                ('most_frequent', tagging.fields.TagField(blank=True, help_text='(Most frequent single words. You should let *me* fill this in. Thank you.)', max_length=255, verbose_name='Most Frequent')),
                ('places', tagging.fields.TagField(blank=True, max_length=255, verbose_name='Places')),
                ('names', tagging.fields.TagField(blank=True, max_length=255, verbose_name='Names')),
                ('year_narrative', models.IntegerField(blank=True, null=True, verbose_name='Year')),
                ('date_century', models.SmallIntegerField(blank=True, choices=[(-20, 'XX ac'), (-19, 'IXX ac'), (-18, 'XVIII ac'), (-17, 'XVII ac'), (-16, 'XVI ac'), (-15, 'XV ac'), (-14, 'XIV ac'), (-13, 'XIII ac'), (-12, 'XII ac'), (-11, 'XI ac'), (-10, 'X ac'), (-9, 'IX ac'), (-8, 'VIII ac'), (-7, 'VII ac'), (-6, 'VI ac'), (-5, 'V ac'), (-4, 'IV ac'), (-3, 'III ac'), (-2, 'II ac'), (-1, 'I ac'), (1, 'I'), (2, 'II'), (3, 'III'), (4, 'IV'), (5, 'V'), (6, 'VI'), (7, 'VII'), (8, 'VIII'), (9, 'IX'), (10, 'X'), (11, 'XI'), (12, 'XII'), (13, 'XIII'), (14, 'XIV'), (15, 'XV'), (16, 'XVI'), (17, 'XVII'), (18, 'XVIII'), (19, 'XIX'), (20, 'XX'), (21, 'XXI')], default=20, null=True, verbose_name='Century')),
                ('date_decade', models.SmallIntegerField(blank=True, choices=[(0, '0s'), (10, '10s'), (20, '20s'), (30, '30s'), (40, '40s'), (50, '50s'), (60, '60s'), (70, '70s'), (80, '80s'), (90, '90s')], default=90, null=True, verbose_name='Decade')),
                ('presentation', models.SmallIntegerField(choices=[(5, 'Oral transcription'), (4, 'Memory transcription'), (3, 'Scientific written text'), (2, 'Citation/Quote'), (1, 'Ludic written text')], default=3, verbose_name='Presentation')),
                ('belief', models.SmallIntegerField(blank=True, choices=[(1, 'Convinced Disbelief'), (2, 'Some Scepticism'), (3, 'Unsure / Uncommitted'), (4, 'Some Belief'), (5, 'Convinced Belief')], default=3, null=True, verbose_name='Belief')),
                ('rating', models.IntegerField(default=0, editable=False, verbose_name='Rating')),
                ('notes', models.TextField(blank=True, verbose_name='Comments')),
                ('other', models.TextField(blank=True, null=True, verbose_name='Other References')),
                ('common_title_pt', models.CharField(blank=True, max_length=255, verbose_name='Common title')),
                ('common_title_en', models.CharField(blank=True, max_length=255, verbose_name='Common title')),
                ('slug', models.CharField(editable=False, max_length=255)),
                ('abstract_pt', tinymce.models.HTMLField(blank=True, verbose_name='Abstract')),
                ('abstract_en', tinymce.models.HTMLField(blank=True, verbose_name='Abstract')),
                ('keywords_pt', tagging.fields.TagField(blank=True, help_text='Separate with commas. Will be converted to lowercase.', max_length=255, verbose_name='Keywords')),
                ('keywords_en', tagging.fields.TagField(blank=True, help_text='Separate with commas. Will be converted to lowercase.', max_length=255, verbose_name='Keywords')),
                ('categories', models.ManyToManyField(blank=True, to='legends.LegendCategory', verbose_name='Categories')),
                ('citation', models.ForeignKey(blank=True, help_text='Filling this will excuse you from filling the remaining fields of this group.', limit_choices_to={'is_collection__exact': False}, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='citations', to='biblio.Volume', verbose_name='Biblio. Ref.')),
                ('collection_place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='collections', to='portugal.Freguesia', verbose_name='Place')),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='narrative_creator', to=settings.AUTH_USER_MODEL)),
                ('many_names', models.ManyToManyField(blank=True, help_text='Names occourring or referred to on the Text', null=True, to='legends.Name')),
                ('many_places', models.ManyToManyField(blank=True, help_text='Help us putting it on the map!', to='portugal.Freguesia', verbose_name='Counties/Parishes')),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='narrative_modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Record',
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='place_creator', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='place_modifier', to=settings.AUTH_USER_MODEL)),
                ('narrative', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='place_related', to='legends.Narrative', verbose_name='Record')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='place_related', to='portugal.Freguesia', verbose_name='Place')),
            ],
            options={
                'verbose_name': 'Related Place',
                'verbose_name_plural': 'Related Places',
            },
        ),
        migrations.CreateModel(
            name='NarrativeVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength', models.PositiveSmallIntegerField(default=1, verbose_name='Strength')),
                ('nature', models.CharField(blank=True, max_length=25, verbose_name='Nature')),
                ('narrative', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='narrativeversion_related', to='legends.Narrative', unique=True, verbose_name='Record')),
                ('version', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='version_narrative_related', to='legends.Narrative', verbose_name='Related Version')),
            ],
            options={
                'verbose_name': 'Related Narrative',
                'verbose_name_plural': 'Related Naratives',
                'unique_together': {('narrative', 'version', 'nature', 'strength')},
            },
        ),
        migrations.CreateModel(
            name='NarrativeType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('narrative', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='narrativetype_related', to='legends.Narrative', verbose_name='Record')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='type_related', to='motif.Type', verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Related Type',
                'verbose_name_plural': 'Related Types',
            },
        ),
        migrations.CreateModel(
            name='NarrativeMotif',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='narrativemotif_creator', to=settings.AUTH_USER_MODEL)),
                ('modifier', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='narrativemotif_modifier', to=settings.AUTH_USER_MODEL)),
                ('motif', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='motif_related', to='motif.Motif', verbose_name='Motif')),
                ('narrative', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='narrativemotif_related', to='legends.Narrative', verbose_name='Record')),
            ],
            options={
                'verbose_name': 'Related Motif',
                'verbose_name_plural': 'Related Motifs',
            },
        ),
        migrations.CreateModel(
            name='NarrativeCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('legendcategory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='narrative_categories', to='legends.LegendCategory', verbose_name='Related Category')),
                ('narrative', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='narrativecategory_related', to='legends.Narrative', verbose_name='Record')),
            ],
        ),
        migrations.AddField(
            model_name='narrative',
            name='narratives',
            field=models.ManyToManyField(related_name='related_narratives', through='legends.NarrativeVersion', to='legends.Narrative', verbose_name='Related Narratives'),
        ),
        migrations.AddField(
            model_name='narrative',
            name='web_references',
            field=models.ManyToManyField(blank=True, to='legends.Url', verbose_name='Web references'),
        ),
        migrations.CreateModel(
            name='Bibliography',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('excerpt', models.CharField(blank=True, help_text='Part, passage, chapter, page(s), lines, etc.., ', max_length=30, verbose_name='Excerpt')),
                ('is_rewrite', models.BooleanField(default=False, verbose_name='Is a rewrite?')),
                ('narrative', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bibliography_related', to='legends.Narrative', verbose_name='Record')),
                ('reference', models.ForeignKey(limit_choices_to={'is_collection__exact': False}, on_delete=django.db.models.deletion.PROTECT, to='biblio.Volume', verbose_name='Volume')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('name_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='legends.Name')),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('-', 'Unknown')], max_length=1, verbose_name='Gender')),
                ('birth_year', models.SmallIntegerField(blank=True, null=True, verbose_name='Year of Birth')),
                ('age', models.SmallIntegerField(blank=True, null=True, verbose_name='Age')),
                ('notes', models.CharField(blank=True, help_text='Contacts, Education, Learned from..., ', max_length=255, verbose_name='Notes')),
                ('birthplace', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='babies', to='portugal.Freguesia', verbose_name='Place of birth')),
                ('residence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='residents', to='portugal.Freguesia', verbose_name='Place of residence')),
            ],
            options={
                'verbose_name': 'Person',
            },
            bases=('legends.name',),
        ),
        migrations.AddField(
            model_name='narrative',
            name='collector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='collectors', to='legends.Person', verbose_name='Collector'),
        ),
        migrations.AddField(
            model_name='narrative',
            name='informant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='informants', to='legends.Person', verbose_name='Informant'),
        ),
    ]
